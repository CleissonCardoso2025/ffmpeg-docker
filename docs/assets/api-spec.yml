openapi: 3.0.0
info:
  title: FFmpeg Docker API
  version: 0.1.0
  description: Common FFMPEG fucntions from a RESTful API
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  contact:
    name: Ryan McCarntney
    url: https://ryan.mccartney.info/ffmpeg-docker
    email: ryan@mccartney.info
servers:
  - url: http://localhost:80/api/
paths:
  /bars/decklink:
    get:
      description: Takes a set of test Bars as an input and outputs it to a decklink card.
      tags:
        - bars
      parameters:
        - in: formData
          name: cardName
          type: string
          description: The name of the BMD Decklink cards. E.g - "DeckLink SDI"
          required: true
        - in: formData
          name: font
          type: string
          description: The name of the font file to use for text overlay. Must use the
            TrueType fonts. E.g - "swansea-bold.ttf"
          required: font
        - in: formData
          name: offset
          type: number
          description: Offset for time in hours. E.g 3, -3
          required: false
        - in: formData
          name: timecode
          type: boolean
          description: Show the timecode line - true,false
          required: false
        - in: formData
          name: repeat
          type: boolean
          description: Decides whether the media loops or not
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file:
    get:
      description: Download file by name.
      tags:
        - file
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /bars/srt:
    get:
      description: SRT encode test bars.
      tags:
        - bars
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /bars/rtmp:
    get:
      description: RTMP encode test bars.
      tags:
        - bars
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /bars/udp:
    get:
      description: UDP encode test bars.
      tags:
        - bars
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /bars/hls:
    get:
      description: HLS encode test bars.
      tags:
        - bars
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/file:
    get:
      description: Takes Decklink input in SDI and encodes it as a file.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/srt:
    get:
      description: Takes Decklink input in SDI and encodes it as SRT.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/udp:
    get:
      description: Takes Decklink input in SDI and encodes it as UDP.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/rtmp:
    get:
      description: Takes Decklink input in SDI and encodes it as RTMP.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/hls:
    get:
      description: Takes Decklink input in SDI and encodes it as HLS.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink:
    get:
      description: Gets the info about currently attached Decklink cards
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
    post:
      description: Sets the config for an individual Decklink card
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/decklink:
    get:
      description: Takes a file as an input and outputs it to a decklink card.
      tags:
        - file
      parameters:
        - in: formData
          name: filename
          type: string
          description: Filename and extension of media to playout. E.g - test.mp4
          required: true
        - in: formData
          name: cardName
          type: string
          description: The name of the BMD Decklink cards. E.g - "DeckLink SDI"
          required: true
        - in: formData
          name: font
          type: string
          description: The name of the font file to use for text overlay. Must use the
            TrueType fonts. E.g - "swansea-bold.ttf"
          required: font
        - in: formData
          name: offset
          type: number
          description: Offset for time in hours. E.g 3, -3
          required: false
        - in: formData
          name: timecode
          type: boolean
          description: Show the timecode line - true,false
          required: false
        - in: formData
          name: repeat
          type: boolean
          description: Decides whether the media loops or not
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/srt:
    get:
      description: SRT encode a file.
      tags:
        - file
      parameters:
        - in: formData
          name: filename
          type: string
          description: Filename and extension of media to playout. E.g - test.mp4.
            Relative to ./data/media/
          required: true
        - in: formData
          name: address
          type: string
          description: Address to direct stream towards
          required: true
        - in: formData
          name: port
          type: number
          description: Port to direct stream towards
          required: true
        - in: formData
          name: latency
          type: number
          description: SRT latency in milliseconds, default is 250ms
          required: false
        - in: formData
          name: bitrate
          type: number
          description: The bitrate of the encoded stream in kilobits per second
          required: true
        - in: formData
          name: font
          type: string
          description: The name of the font file to use for text overlay. Must use the
            TrueType fonts. E.g - "swansea-bold.ttf"
          required: false
        - in: formData
          name: offset
          type: number
          description: Offset for time in hours. E.g 3, -3
          required: false
        - in: formData
          name: timecode
          type: boolean
          description: Show the timecode line - true,false
          required: false
        - in: formData
          name: repeat
          type: boolean
          description: Decides whether the media loops or not
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/udp:
    get:
      description: UDP encode a file.
      tags:
        - file
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/rtmp:
    get:
      description: RTMP encode a file.
      tags:
        - file
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/hls:
    get:
      description: HLS encode a file.
      tags:
        - file
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/metadata:
    get:
      description: Get the metadata in a media file.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /clock:
    get:
      description: An HTML page with a live clock showing server time - suitable for
        latency measurements
      tags:
        - page
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /jobs:
    get:
      description: An HTML page showing a simple job manager
      tags:
        - page
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /chart:
    get:
      description: An HTML page showing VMAF test results as a chart
      tags:
        - page
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /playlist/:playlist:
    get:
      description: Get all the items in a playlist
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
    post:
      description: Set all the items in a playlist
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /playlist/:playlist/add:
    get:
      description: Add a single file to the playlist.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /udp/decklink:
    get:
      description: Takes an UDP input and outputs it to a decklink card.
      tags:
        - udp
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /srt/file:
    get:
      description: Takes an SRT input and turns it into a file.
      tags:
        - srt
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /srt/decklink:
    get:
      description: Takes an SRT input and outputs it to a decklink card.
      tags:
        - srt
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/hello:
    get:
      description: Test route, API greets you in response.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/time:
    post:
      description: Set NTP server and sync.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
    get:
      description: Get server time.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/stas:
    get:
      description: Get system stats; CPU, memory, etc.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/job/kill/all:
    get:
      description: Kill all running jobs
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/job/kill/:jobId:
    get:
      description: Kills a job by ID
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/job/all:
    get:
      description: Gets all jobs that are running
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/job/thumbnail/:jobId:
    get:
      description: Gets a thumnail for a job by it's Job ID
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/job/:jobId:
    get:
      description: Gets a job by ID
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /vmaf/models:
    get:
      description: Returns a list of VMAF models.
      tags:
        - vmaf
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /vmaf/test:
    get:
      description: Run a VMAF test specifing a reference file and test file.
      tags:
        - vmaf
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /vmaf/results/json:
    get:
      description: Get a VMAF results file as a JSON object.
      tags:
        - vmaf
      produces:
        - application/file
      responses:
        "200":
          description: Success
  /vmaf/results/csv:
    get:
      description: Get a VMAF results file as a CSV object.
      tags:
        - vmaf
      produces:
        - application/file
      responses:
        "200":
          description: Success
  /vmaf/results/download/csv:
    get:
      description: Get a VMAF results file as a CSV file.
      tags:
        - vmaf
      produces:
        - application/file
      responses:
        "200":
          description: Success
  /vmaf/results/download/json:
    get:
      description: Get a VMAF results file in a downloadable JSON file.
      tags:
        - vmaf
      produces:
        - application/file
      responses:
        "200":
          description: Success
components: {}
tags: []
