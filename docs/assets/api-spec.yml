openapi: 3.0.0
info:
  title: FFmpeg Docker API
  version: 0.1.0
  description: Common FFMPEG fucntions from a RESTful API
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  contact:
    name: Ryan McCarntney
    url: https://ryan.mccartney.info/ffmpeg-docker
    email: ryan@mccartney.info
servers:
  - url: http://localhost:80/api/
paths:
  /decklink:
    get:
      description: Gets the info about currently attached Decklink cards
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex:
    get:
      description: Gets the config for an individual Decklink card
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
    post:
      description: Sets the config for an individual Decklink card
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/file:
    get:
      description: Sends a file to a decklink output
      tags:
        - decklink
      parameters:
        - in: formData
          name: filename
          type: string
          description: Filename and extension of media to playout. E.g - test.mp4
          required: true
        - in: formData
          name: cardName
          type: string
          description: The name of the BMD Decklink cards. E.g - "DeckLink SDI"
          required: true
        - in: formData
          name: font
          type: string
          description: The name of the font file to use for text overlay. Must use the
            TrueType fonts. E.g - "swansea-bold.ttf"
          required: font
        - in: formData
          name: offset
          type: number
          description: Offset for time in hours. E.g 3, -3
          required: false
        - in: formData
          name: timecode
          type: boolean
          description: Show the timecode line - true,false
          required: false
        - in: formData
          name: repeat
          type: boolean
          description: Decides whether the media loops or not
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/record:
    get:
      description: Record the input of a decklink card index to file
      tags:
        - decklink
      parameters:
        - in: formData
          name: cardName
          type: string
          description: The name of the BMD Decklink cards. E.g - "DeckLink SDI"
          required: true
        - in: formData
          name: font
          type: string
          description: The name of the font file to use for text overlay. Must use the
            TrueType fonts. E.g - "swansea-bold.ttf"
          required: font
        - in: formData
          name: offset
          type: number
          description: Offset for time in hours. E.g 3, -3
          required: false
        - in: formData
          name: timecode
          type: boolean
          description: Show the timecode line - true,false
          required: false
        - in: formData
          name: repeat
          type: boolean
          description: Decides whether the media loops or not
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/hls:
    get:
      description: Converts the input of a decklink card index to hls
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex:/srt:
    get:
      description: Converts the input of a decklink card index to hls
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/bars:
    get:
      description: Sends some SMPTE bars to a decklink output
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/thumbnail:
    get:
      description: Get thumbnail of the decklink output
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/stop:
    get:
      description: Stops the decklink output on a particular index
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decklink/:cardIndex/pause:
    get:
      description: Pauses the decklink output on a particular index
      tags:
        - decklink
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /decode/srt/file:
    get:
      description: Takes an SRT input and turns it into a file.
      tags:
        - decode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /encode/srt/file:
    get:
      description: SRT encode a file.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /encode/rtmp/file:
    get:
      description: RTMP encode a file.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /encode/srt/bars:
    get:
      description: SRT encode test bars.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /encode/rtmp/bars:
    get:
      description: RTMP encode test bars.
      tags:
        - encode
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/metadata:
    get:
      description: Get the metadata in a media file.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/bars:
    get:
      description: Generate custom ident bars.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /file/download:
    get:
      description: Download file by name.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /playlist/:playlist:
    get:
      description: Set all the items in a playlist
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /playlist/:playlist/add:
    get:
      description: Add a single file to the playlist.
      tags:
        - files
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/hello:
    get:
      description: Test route, API greets you in response.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
  /system/time:
    post:
      description: Set NTP server and sync.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
    get:
      description: Get server time.
      tags:
        - system
      produces:
        - application/json
      responses:
        "200":
          description: Success
components: {}
tags: []
